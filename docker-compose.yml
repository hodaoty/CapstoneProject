version: '3.8'

services:
  # 1. API Gateway (Nginx) 
  api-gateway:
    image: nginx:1.21-alpine
    container_name: api-gateway
    volumes:
      - ./infra/api-gateway/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - user-service
      - auth-service

  # 2. User Service (FastAPI)
  user-service:
    container_name: user-service
    build: ./services/user-service
    environment:
      - DATABASE_URL=postgresql://user:password@db/mydatabase
    depends_on:
      - db
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 3. Database (PostgreSQL)
  db:
    image: postgres:14-alpine
    container_name: postgres-db
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=mydatabase
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 4. Auth Service (FastAPI)
  auth-service:
    container_name: auth-service
    build: ./services/auth-service
    environment:
      - REDIS_URL=redis://redis-db:6379
      - JWT_SECRET_KEY=tykhoihanhduyen
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - USER_SERVICE_URL=http://user-service:8000/api
    depends_on:
      - redis-db
      - user-service
    ports:
      - "8001:8001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 5. Redis Database
  redis-db:
    image: redis:6-alpine
    container_name: redis-db
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s 
      retries: 5

volumes:
  postgres_data:
  redis_data:
